/* SPDX-License-Identifier: GPL-2.0 */
/*
 * Copyright (c) 2023, Advanced Micro Devices Inc.
 */

#ifndef __ASIC_REGS_SALINA_H__
#define __ASIC_REGS_SALINA_H__

#ifdef __cplusplus
extern "C" {
#if 0
} /* close to calm emacs autoindent */
#endif
#endif

#define ASIC_(REG)      SAL_ ##REG
#define PXBT_(REG) \
    (SAL_ADDR_BASE_PXB_PXB_OFFSET + SAL_PXB_CSR_TGT_BYTE_OFFSET + \
     SAL_PXBT_CSR_ ##REG## _BYTE_ADDRESS)
#define PXBI_(REG) \
    (SAL_ADDR_BASE_PXB_PXB_OFFSET + SAL_PXB_CSR_ITR_BYTE_OFFSET + \
     SAL_PXBI_CSR_ ##REG## _BYTE_ADDRESS)
#define _PXC_BASE(pn) \
    (SAL_ADDR_BASE_PP_PXC_0_OFFSET + \
     ((pn) * SAL_ADDR_BASE_PP_PXC_0_SIZE))
#define PXC_(REG, pn) \
    (_PXC_BASE(pn) + SAL_PXC_CSR_ ##REG## _BYTE_ADDRESS)

/* sal_top_csr_defines.h */
#define SAL_ADDR_BASE_PXB_PXB_OFFSET 0x60000000
#define SAL_ADDR_BASE_PP_PXC_0_OFFSET 0x61080000
#define SAL_ADDR_BASE_PP_PXC_0_SIZE 0x80000
#define SAL_ADDR_BASE_INTR_INTR_0_OFFSET 0x12000000
#define SAL_ADDR_BASE_INTR_INTR_0_SIZE 0x200000
#define SAL_ADDR_BASE_INTR_INTR_1_OFFSET 0x22000000
#define SAL_ADDR_BASE_INTR_INTR_1_SIZE 0x200000

/* sal_pxb_c_hdr.h */
#define SAL_PXB_CSR_ITR_BYTE_OFFSET 0x200000
#define SAL_PXB_CSR_TGT_BYTE_OFFSET 0x300000

/* sal_pxbt_c_hdr.h */
#define SAL_PXBI_CSR_DHS_ITR_PCIHDRT_BYTE_ADDRESS 0x0
#define SAL_PXBI_CSR_DHS_ITR_PCIHDRT_ENTRY_BYTE_SIZE 0x10
#define SAL_PXBI_CSR_DHS_ITR_PCIHDRT_ENTRIES 0x1000
#define SAL_PXBT_CSR_STA_TGT_FREE_RUNNING_BYTE_ADDRESS 0x70480
#define SAL_PXBT_CSR_STA_TGT_IND_DEBUG_RSP_BYTE_ADDRESS 0x70488
#define SAL_PXBT_CSR_CFG_TGT_IND_DEBUG_RSP_BYTE_ADDRESS 0x70490

/* sal_pxbi_c_hdr.h */
#define SAL_PXBT_CSR_DHS_TGT_PMT_BYTE_ADDRESS 0x0
#define SAL_PXBT_CSR_DHS_TGT_PMR_BYTE_ADDRESS 0x10000
#define SAL_PXBT_CSR_DHS_TGT_PRT_BYTE_ADDRESS 0x20000
#define SAL_PXBT_CSR_DHS_TGT_AXIMST0_BYTE_ADDRESS 0x64000
#define SAL_PXBT_CSR_DHS_TGT_AXIMST1_BYTE_ADDRESS 0x65000
#define SAL_PXBT_CSR_DHS_TGT_NOTIFY_BYTE_ADDRESS 0x69400
#define SAL_PXBT_CSR_DHS_TGT_IND_RSP_ENTRY_BYTE_ADDRESS 0x70020
#define SAL_PXBT_CSR_CFG_TGT_REQ_NOTIFY_INT_BYTE_ADDRESS 0x700a0
#define SAL_PXBT_CSR_CFG_TGT_REQ_NOTIFY_RING_SIZE_BYTE_ADDRESS 0x700b0
#define SAL_PXBT_CSR_CFG_TGT_REQ_INDIRECT_INT_BYTE_ADDRESS 0x700c0
#define SAL_PXBT_CSR_CFG_TGT_NOTIFY_EN_BYTE_ADDRESS 0x70164
#define SAL_PXBT_CSR_CFG_TGT_PMT_GRST_BYTE_ADDRESS 0x701c4
#define SAL_PXBT_CSR_STA_TGT_IND_INFO_BYTE_ADDRESS 0x70340
#define SAL_PXBT_CSR_DHS_TGT_PMT_ENTRY_ARRAY_ELEMENT_SIZE 0x1
#define SAL_PXBT_CSR_DHS_TGT_PMR_ENTRY_BYTE_SIZE 0x10
#define SAL_PXBT_CSR_DHS_TGT_PRT_ENTRY_BYTE_SIZE 0x10

/* sal_pxc_c_hdr.h */
#define SAL_PXC_CSR_DHS_C_MAC_APB_ENTRY_BYTE_ADDRESS 0x10000

/* sal_intr_c_hdr.h */
#define SAL_INTR_CSR_DHS_INTR_ASSERT_ENTRY_ARRAY_COUNT 0x2000
#define SAL_INTR_CSR_DHS_INTR_MSIXCFG_BYTE_OFFSET 0x20000
#define SAL_INTR_CSR_DHS_INTR_FWCFG_BYTE_OFFSET 0x40000
#define SAL_INTR_CSR_DHS_INTR_DRVCFG_BYTE_OFFSET 0x80000
#define SAL_INTR_CSR_DHS_INTR_ASSERT_BYTE_OFFSET 0xd8000
#define SAL_INTR_CSR_DHS_INTR_STATE_BYTE_OFFSET 0x100000

#define HDRT_BASE       PXBI_(DHS_ITR_PCIHDRT)
#define HDRT_COUNT      ASIC_(PXBI_CSR_DHS_ITR_PCIHDRT_ENTRIES)
#define HDRT_STRIDE     ASIC_(PXBI_CSR_DHS_ITR_PCIHDRT_ENTRY_BYTE_SIZE)

#define IND_INFO_BASE   PXBT_(STA_TGT_IND_INFO)
#define IND_INFO_NWORDS 1
#define IND_INFO_STRIDE 4

#define AXIMST_BASE     PXBT_(DHS_TGT_AXIMST0)
#define AXIMST_STRIDE   \
    (ASIC_(PXBT_CSR_DHS_TGT_AXIMST1_BYTE_ADDRESS) - \
     ASIC_(PXBT_CSR_DHS_TGT_AXIMST0_BYTE_ADDRESS))

#define AXIS_INFO_BYTE_COUNT    17
#define AXIMST_NWORDS           5
#define HDRT_NWORDS             4
#define AXIMST_ENTRY_STRIDE     32
#define AXIMST_ENTRIES_PER_PORT 16
#define AXIMST_PORTS_PER_ROW    8
#define AXIMST_PORT_STRIDE      (AXIMST_ENTRY_STRIDE * AXIMST_ENTRIES_PER_PORT)

#define IND_RSP_ADDR    PXBT_(DHS_TGT_IND_RSP_ENTRY)
#define IND_RSP_NWORDS  5

#define IND_INT_ADDR    PXBT_(CFG_TGT_REQ_INDIRECT_INT)


#define INTR_GROUP_COUNT        2
#define INTR_COUNT_PER_GROUP    ASIC_(INTR_CSR_DHS_INTR_ASSERT_ENTRY_ARRAY_COUNT)
#define INTR_COUNT              (INTR_GROUP_COUNT * INTR_COUNT_PER_GROUP)
#define INTR_GROUP(i)           (((i) >> 13) & 0x1)

#define INTR_BASE(i)            (INTR_GROUP(i) == 0 ?                 \
                                ASIC_(ADDR_BASE_INTR_INTR_0_OFFSET) : \
                                ASIC_(ADDR_BASE_INTR_INTR_1_OFFSET))

#define INTR_MSIXCFG_OFFSET     ASIC_(INTR_CSR_DHS_INTR_MSIXCFG_BYTE_OFFSET)
#define INTR_MSIXCFG_BASE(i)    (INTR_BASE(i) + INTR_MSIXCFG_OFFSET)
#define INTR_MSIXCFG_STRIDE     0x10

#define INTR_FWCFG_OFFSET       ASIC_(INTR_CSR_DHS_INTR_FWCFG_BYTE_OFFSET)
#define INTR_FWCFG_BASE(i)      (INTR_BASE(i) + INTR_FWCFG_OFFSET)
#define INTR_FWCFG_STRIDE       0x8

#define INTR_DRVCFG_OFFSET      ASIC_(INTR_CSR_DHS_INTR_DRVCFG_BYTE_OFFSET)
#define INTR_DRVCFG_BASE(i)     (INTR_BASE(i) + INTR_DRVCFG_OFFSET)
#define INTR_DRVCFG_STRIDE      0x20

#define INTR_ASSERT_OFFSET      ASIC_(INTR_CSR_DHS_INTR_ASSERT_BYTE_OFFSET)
#define INTR_ASSERT_BASE(i)     (INTR_BASE(i) + INTR_ASSERT_OFFSET)
#define INTR_ASSERT_STRIDE      0x4
#define INTR_ASSERT_DATA        0x00000001 /* in little-endian */

#define INTR_STATE_OFFSET       ASIC_(INTR_CSR_DHS_INTR_STATE_BYTE_OFFSET)
#define INTR_STATE_BASE(i)      (INTR_BASE(i) + INTR_STATE_OFFSET)
#define INTR_STATE_STRIDE       0x10

#define NOTIFY_EN               PXBT_(CFG_TGT_NOTIFY_EN)
#define NOTIFY_RING_SIZE        PXBT_(CFG_TGT_REQ_NOTIFY_RING_SIZE)

#define NOTIFY_BASE             PXBT_(DHS_TGT_NOTIFY)
#define NOTIFY_STRIDE           4

#define NOTIFY_INT_ADDR         PXBT_(CFG_TGT_REQ_NOTIFY_INT)

#define PMT_BASE                PXBT_(DHS_TGT_PMT)
#define PMT_STRIDE      \
    (ASIC_(PXBT_CSR_DHS_TGT_PMT_ENTRY_ARRAY_ELEMENT_SIZE) * 4 * 8)
#define PMT_GRST                PXBT_(CFG_TGT_PMT_GRST)
#define PMR_BASE                PXBT_(DHS_TGT_PMR)
#define PMR_STRIDE              ASIC_(PXBT_CSR_DHS_TGT_PMR_ENTRY_BYTE_SIZE)

#define PRT_BASE        PXBT_(DHS_TGT_PRT)
#define PRT_STRIDE      ASIC_(PXBT_CSR_DHS_TGT_PRT_ENTRY_BYTE_SIZE)

/* the only client freeing slabs is overrides */
#define PRT_SLAB_SIZE   PCIEHDEVICE_OVERRIDE_INTRGROUPS

#ifdef __cplusplus
}
#endif

#endif /* __ASIC_REGS_SALINA_H__ */
